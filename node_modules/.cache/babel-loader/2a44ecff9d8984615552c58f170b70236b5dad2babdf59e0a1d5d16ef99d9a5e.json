{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Downloads\\\\nueva\\\\virtual_catalogo\\\\src\\\\components\\\\layouts\\\\filter\\\\Filter.js\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport React, { useEffect, useState } from 'react';\nimport { ProductData } from '../../../util/ProductData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = () => {\n  _s();\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [filteredItems, setFilteredItems] = useState(ProductData);\n  let filters = [\"Bags\", \"Watches\", \"Sports\", \"Sunglasses\"];\n  const handleFilterButtonClick = selectedCategory => {\n    if (selectedFilters.includes(selectedCategory)) {\n      let filters = selectedFilters.filter(el => el !== selectedCategory);\n      setSelectedFilters(filters);\n    } else {\n      setSelectedFilters([...selectedFilters, selectedCategory]);\n    }\n  };\n  useEffect(() => {\n    filterItems();\n  }, [selectedFilters]);\n  const filterItems = () => {\n    if (selectedFilters.length > 0) {\n      let tempItems = selectedFilters.map(selectedCategory => {\n        let temp = ProductData.filter(item => item.category === selectedCategory);\n        return temp;\n      });\n      setFilteredItems(tempItems.flat());\n    } else {\n      setFilteredItems([...ProductData]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: filters.map((category, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilterButtonClick(category),\n        className: `button ${selectedFilters !== null && selectedFilters !== void 0 && selectedFilters.includes(category) ? \"active\" : \"\"}`,\n        children: category\n      }, `filters-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: filteredItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, `items-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Filter, \"G4ne5pFVLRMVILVfdW9p/K3WAW4=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useEffect","useState","ProductData","jsxDEV","_jsxDEV","Filter","_s","selectedFilters","setSelectedFilters","filteredItems","setFilteredItems","filters","handleFilterButtonClick","selectedCategory","includes","filter","el","filterItems","length","tempItems","map","temp","item","category","flat","children","className","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/nicol/Downloads/nueva/virtual_catalogo/src/components/layouts/filter/Filter.js"],"sourcesContent":["import './style.css';\r\n\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { ProductData } from '../../../util/ProductData';\r\n\r\nconst Filter =()=>{\r\n    \r\n  const [selectedFilters, setSelectedFilters] = useState([]);\r\n  const [filteredItems, setFilteredItems] = useState(ProductData);\r\n\r\n  let filters = [\"Bags\", \"Watches\", \"Sports\", \"Sunglasses\"];\r\n\r\n  const handleFilterButtonClick = (selectedCategory) => {\r\n    if (selectedFilters.includes(selectedCategory)) {\r\n      let filters = selectedFilters.filter((el) => el !== selectedCategory);\r\n      setSelectedFilters(filters);\r\n    } else {\r\n      setSelectedFilters([...selectedFilters, selectedCategory]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterItems();\r\n  }, [selectedFilters]);\r\n\r\n  const filterItems = () => {\r\n    if (selectedFilters.length > 0) {\r\n      let tempItems = selectedFilters.map((selectedCategory) => {\r\n        let temp = ProductData.filter((item) => item.category === selectedCategory);\r\n        return temp;\r\n      });\r\n      setFilteredItems(tempItems.flat());\r\n    } else {\r\n      setFilteredItems([...ProductData]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"buttons-container\">\r\n        {filters.map((category, idx) => (\r\n          <button\r\n            onClick={() => handleFilterButtonClick(category)}\r\n            className={`button ${\r\n              selectedFilters?.includes(category) ? \"active\" : \"\"\r\n            }`}\r\n            key={`filters-${idx}`}\r\n          >\r\n            {category}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"items-container\">\r\n        {filteredItems.map((item, idx) => (\r\n          <div key={`items-${idx}`} className=\"item\">\r\n            <p>{item.name}</p>\r\n            <p className=\"category\">{item.category}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Filter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}